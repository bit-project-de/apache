---
- name: print the distribution and version
  debug: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}"

- name: Install apache httpd  (state=present is optional)
  apt:
    name: apache2
    state: "{{ httpd_package_state }}"
    update_cache: true
    cache_valid_time: 360

- name: Disable default configuration
  file:
    name: "/etc/apache2/sites-enabled/000-default.conf"
    state: absent
  notify: Restart httpd

- name: Set httpd custom ports
  template:
    src: ports.conf
    dest: /etc/apache2/ports.conf
    owner: root
    group: root
    mode: "0644"
  notify: Restart httpd

- name: Configure httpd
  template:
    src: apache2.conf
    dest: /etc/apache2/apache2.conf
    owner: root
    group: root
    mode: "0644"
  notify: Restart httpd

- name: Install missing modules with aptitude (optional)
  apt:
    state: "{{ item.state }}"
    name: "{{ item.apt_package }}"
    update_cache: true
    cache_valid_time: 360
  with_items: "{{ httpd_modules }}"
  when: 'item.apt_package is defined'

- name: Configure apache2 modules
  community.general.apache2_module:
    state: "{{ item.state }}"
    name: "{{ item.name }}"
  with_items: "{{ httpd_modules }}"

- name: Configure vhosts
  include_tasks: vhost/main.yml
  with_items: "{{ httpd_vhosts }}"
  loop_control:
    loop_var: vhost

- name: Remove absent vhosts
  include_tasks: vhost/remove.yml
  with_items: "{{ httpd_vhosts_absent }}"
  loop_control:
    loop_var: vhost

- name: Configure vhosts
  include_tasks: vhost/main.yml
  with_items: "{{ httpd_vhosts }}"
  loop_control:
    loop_var: vhost

- name: Ensure httpd service is enabled
  service:
    name: apache2
    state: started
    enabled: true

- name: Get httpd vhost conf status
  command: apachectl -S
  register: _httpd_vhost_conf_status
  changed_when: false

- name: Get httpd modules status
  command: apachectl -M
  register: _httpd_modules_status
  changed_when: false

- name: Print httpd modules status
  debug: msg={{ _httpd_modules_status.stdout.split('\n') }}

- name: Print httpd vhost conf status
  debug: msg={{ _httpd_vhost_conf_status.stdout.split('\n') }}
